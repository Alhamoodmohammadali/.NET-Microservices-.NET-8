// <auto-generated />
using EduSpot.Services.MagorAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EduSpot.Services.MagorAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EduSpot.Services.MagorAPI.Models.Major", b =>
                {
                    b.Property<int>("MajorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MajorId"));

                    b.Property<string>("ArbicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountHours")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageLocalPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PdfLocalPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PdfUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortCut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int");

                    b.HasKey("MajorId");

                    b.ToTable("Majors");

                    b.HasData(
                        new
                        {
                            MajorId = 1,
                            ArbicName = "معهد التقاني للحاسوب ",
                            CountHours = 60,
                            Description = "allowing students to study at any time and from anywhere that suits them.\r\n                                The university also focuses on providing excellent technical and academic \r\n                                support to students to ensure their academic success\r\n                ",
                            ImageUrl = "https://placehold.co/603x403",
                            Name = "Tincncal Iinternal City",
                            ShortCut = "TIC",
                            UniversityId = 1
                        },
                        new
                        {
                            MajorId = 2,
                            ArbicName = "كلية التقاني للحاسوب ",
                            CountHours = 120,
                            Description = "allowing students to study at any time and from anywhere that suits them.\r\n                                The university also focuses on providing excellent technical and academic \r\n                                support to students to ensure their academic success",
                            ImageUrl = "https://placehold.co/603x403",
                            Name = "B incncal Binternal Bity",
                            ShortCut = "Bait ",
                            UniversityId = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
